name: Deploy Angular Application and PWA with FTP

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Build Angular Application
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Build Docker image
        uses: docker/build-push-action@v6.15.0
        with:
          context: .
          tags: list_client_app:latest,list_client_app:$(git rev-parse --short HEAD)
          output: type=docker,dest=list_client_app.tar

      - name: Install WireGuard et SSHPass
        run: |
          set -e
          sudo apt update
          sudo apt install -y wireguard-tools sshpass

      - name: Configure WireGuard
        run: |
          echo "${{ secrets.WG_CONFIG }}" | sudo tee /etc/wireguard/wg0.conf > /dev/null
          sudo wg-quick up wg0 || (echo "WireGuard failed to start!" && exit 1)
          sleep 3
          sudo wg

      - name: Test VPN Connectivity
        run: |
          set -e
          sudo ping -c "${{ secrets.WG_SUB_NETWORK }} || (echo "VPN Ping failed!" && exit 1)

      - name: Test SSH Connection
        run: |
          set -e
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
          ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'Connexion SSH successfully !'"

      - name: Deploy to Server from SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: "22"
          script: |
            cd list_app/client/
            sudo docker compose down
            sudo docker load -i list_client_app.tar || true
            TAG=$(git rev-parse --short HEAD) sudo docker compose up -d --force-recreate

      - name: Cleanup VPN
        if: always()
        run: sudo wg-quick down wg0
